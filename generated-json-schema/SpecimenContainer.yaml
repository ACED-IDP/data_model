additionalProperties: false
description: 'Direct container of specimen (tube/slide, etc.).

  The container holding the specimen.  The recursive nature of containers;

  i.e. blood in tube in tray in rack is not addressed here.'
id: SpecimenContainer
properties:
  _description:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``description``.
  additiveCodeableConcept:
    $ref: CodeableConcept.yaml
    binding_description: Substance added to specimen container.
    binding_strength: example
    binding_uri: http://terminology.hl7.org/ValueSet/v2-0371
    description: 'Introduced substance to preserve, maintain or enhance the specimen.
      Examples: Formalin, Citrate, EDTA. See http://terminology.hl7.org/ValueSet/v2-0371'
    element_property: true
    one_of_many: additive
    one_of_many_required: false
    title: Additive associated with container
  additiveReference:
    $ref: Reference.yaml
    binding_description: Substance added to specimen container.
    binding_strength: example
    binding_uri: http://terminology.hl7.org/ValueSet/v2-0371
    description: 'Introduced substance to preserve, maintain or enhance the specimen.
      Examples: Formalin, Citrate, EDTA. See http://terminology.hl7.org/ValueSet/v2-0371'
    element_property: true
    one_of_many: additive
    one_of_many_required: false
    title: Additive associated with container
  capacity:
    $ref: Quantity.yaml
    description: The capacity (volume or other measure) the container may contain.
    element_property: true
    title: Container volume or size
  description:
    element_property: true
    pattern: '[ \r\n\t\S]+'
    title: Textual description of the container
    type: string
  extension:
    description: May be used to represent additional information that is not part
      of the basic definition of the element. To make the use of extensions safe and
      manageable, there is a strict set of governance  applied to the definition and
      use of extensions. Though any implementer can define an extension, there is
      a set of requirements that SHALL be met as part of the definition of the extension.
    element_property: true
    items:
      $ref: Extension.yaml
    title: Additional content defined by implementations
    type: array
  fhir_comments:
    anyOf:
    - type: string
    - items:
        type: string
      type: array
    element_property: false
    title: Fhir Comments
  id:
    description: Unique id for the element within a resource (for internal references).
      This may be any string value that does not contain spaces.
    element_property: true
    maxLength: 64
    minLength: 1
    pattern: ^[A-Za-z0-9\-.]+$
    title: Unique id for inter-element referencing
    type: string
  identifier:
    description: Id for container. There may be multiple; a manufacturer's bar code,
      lab assigned identifier, etc. The container ID may differ from the specimen
      id in some circumstances.
    element_property: true
    items:
      $ref: Identifier.yaml
    title: Id for the container
    type: array
  modifierExtension:
    description: May be used to represent additional information that is not part
      of the basic definition of the element and that modifies the understanding of
      the element in which it is contained and/or the understanding of the containing
      element's descendants. Usually modifier elements provide negation or qualification.
      To make the use of extensions safe and manageable, there is a strict set of
      governance applied to the definition and use of extensions. Though any implementer
      can define an extension, there is a set of requirements that SHALL be met as
      part of the definition of the extension. Applications processing a resource
      are required to check for modifier extensions.  Modifier extensions SHALL NOT
      change the meaning of any elements on Resource or DomainResource (including
      cannot change the meaning of modifierExtension itself).
    element_property: true
    items:
      $ref: Extension.yaml
    title: Extensions that cannot be ignored even if unrecognized
    type: array
  resourceType
    const: SpecimenContainer
    title: Resource Type
    type: string
  specimenQuantity:
    $ref: Quantity.yaml
    description: The quantity of specimen in the container; may be volume, dimensions,
      or other appropriate measurements, depending on the specimen type.
    element_property: true
    title: Quantity of specimen within container
  type:
    $ref: CodeableConcept.yaml
    binding_description: Type of specimen container.
    binding_strength: example
    binding_uri: http://hl7.org/fhir/ValueSet/specimen-container-type
    description: The type of container associated with the specimen (e.g. slide, aliquot,
      etc.). See http://hl7.org/fhir/ValueSet/specimen-container-type
    element_property: true
    title: Kind of container directly associated with specimen
title: SpecimenContainer
type: object
