additionalProperties: false
description: 'Document referenced.

  The document and format referenced. There may be multiple content element

  repetitions, each with a different format.'
id: DocumentReferenceContent
properties:
  attachment:
    $ref: Attachment.yaml
    description: The document or URL of the document along with critical metadata
      to prove content has integrity.
    element_property: true
    title: Where to access the document
  extension:
    description: May be used to represent additional information that is not part
      of the basic definition of the element. To make the use of extensions safe and
      manageable, there is a strict set of governance  applied to the definition and
      use of extensions. Though any implementer can define an extension, there is
      a set of requirements that SHALL be met as part of the definition of the extension.
    element_property: true
    items:
      $ref: Extension.yaml
    title: Additional content defined by implementations
    type: array
  fhir_comments:
    anyOf:
    - type: string
    - items:
        type: string
      type: array
    element_property: false
    title: Fhir Comments
  format:
    $ref: Coding.yaml
    binding_description: Document Format Codes.
    binding_strength: preferred
    binding_uri: http://hl7.org/fhir/ValueSet/formatcodes
    description: An identifier of the document encoding, structure, and template that
      the document conforms to beyond the base format indicated in the mimeType. See
      http://hl7.org/fhir/ValueSet/formatcodes
    element_property: true
    title: Format/content rules for the document
  id:
    description: Unique id for the element within a resource (for internal references).
      This may be any string value that does not contain spaces.
    element_property: true
    maxLength: 64
    minLength: 1
    pattern: ^[A-Za-z0-9\-.]+$
    title: Unique id for inter-element referencing
    type: string
  modifierExtension:
    description: May be used to represent additional information that is not part
      of the basic definition of the element and that modifies the understanding of
      the element in which it is contained and/or the understanding of the containing
      element's descendants. Usually modifier elements provide negation or qualification.
      To make the use of extensions safe and manageable, there is a strict set of
      governance applied to the definition and use of extensions. Though any implementer
      can define an extension, there is a set of requirements that SHALL be met as
      part of the definition of the extension. Applications processing a resource
      are required to check for modifier extensions.  Modifier extensions SHALL NOT
      change the meaning of any elements on Resource or DomainResource (including
      cannot change the meaning of modifierExtension itself).
    element_property: true
    items:
      $ref: Extension.yaml
    title: Extensions that cannot be ignored even if unrecognized
    type: array
  resource_type:
    const: DocumentReferenceContent
    title: Resource Type
    type: string
required:
- attachment
title: DocumentReferenceContent
type: object
